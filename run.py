# run.py
import threading
from waitress import serve
from iot_server import create_app, config, utils
from iot_server.beacon import udp_server_beacon_broadcaster
import os

app = create_app()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ UDP –º–∞—è—á–æ–∫ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
    beacon_thread = threading.Thread(target=udp_server_beacon_broadcaster, daemon=True)
    beacon_thread.start()

    # –í–∏–≤–æ–¥–∏–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–ø—É—Å–∫
    HOST = "0.0.0.0"
    server_ip_for_print = utils.get_local_ip()
    print(f"üåç –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞ http://{server_ip_for_print}:{config.SERVER_HTTP_PORT} (–∞–±–æ http://{HOST}:{config.SERVER_HTTP_PORT})")
    print(f"üîë –õ–æ–≥—ñ–Ω: {config.USERNAME}, –ü–∞—Ä–æ–ª—å: {config.PASSWORD}")
    print(f"üíæ –§–∞–π–ª –¥–∞–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤: {os.path.abspath(config.DATA_FILE)}")
    print(f"üìú –ö–∞—Ç–∞–ª–æ–≥ –ª–æ–≥—ñ–≤: {os.path.abspath(config.LOGS_DIR_MAIN)}")

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    serve(app, host=HOST, port=config.SERVER_HTTP_PORT, threads=10)
